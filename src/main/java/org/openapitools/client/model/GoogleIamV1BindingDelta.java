/*
 * Identity and Access Management (IAM) API
 * Manages identity and access control for Google Cloud Platform resources, including the creation of service accounts, which you can use to authenticate to Google and make API calls. 
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleTypeExpr;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * One delta entry for Binding. Each individual change (only one member in each entry) to a binding will be a separate entry.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T15:02:31.171999+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class GoogleIamV1BindingDelta {
  /**
   * The action that was performed on a Binding. Required
   */
  @JsonAdapter(ActionEnum.Adapter.class)
  public enum ActionEnum {
    ACTION_UNSPECIFIED("ACTION_UNSPECIFIED"),
    
    ADD("ADD"),
    
    REMOVE("REMOVE");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ActionEnum fromValue(String value) {
      for (ActionEnum b : ActionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ActionEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ActionEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  @javax.annotation.Nullable
  private ActionEnum action;

  public static final String SERIALIZED_NAME_CONDITION = "condition";
  @SerializedName(SERIALIZED_NAME_CONDITION)
  @javax.annotation.Nullable
  private GoogleTypeExpr condition;

  public static final String SERIALIZED_NAME_MEMBER = "member";
  @SerializedName(SERIALIZED_NAME_MEMBER)
  @javax.annotation.Nullable
  private String member;

  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  @javax.annotation.Nullable
  private String role;

  public GoogleIamV1BindingDelta() {
  }

  public GoogleIamV1BindingDelta action(@javax.annotation.Nullable ActionEnum action) {
    this.action = action;
    return this;
  }

  /**
   * The action that was performed on a Binding. Required
   * @return action
   */
  @javax.annotation.Nullable
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(@javax.annotation.Nullable ActionEnum action) {
    this.action = action;
  }


  public GoogleIamV1BindingDelta condition(@javax.annotation.Nullable GoogleTypeExpr condition) {
    this.condition = condition;
    return this;
  }

  /**
   * Get condition
   * @return condition
   */
  @javax.annotation.Nullable
  public GoogleTypeExpr getCondition() {
    return condition;
  }

  public void setCondition(@javax.annotation.Nullable GoogleTypeExpr condition) {
    this.condition = condition;
  }


  public GoogleIamV1BindingDelta member(@javax.annotation.Nullable String member) {
    this.member = member;
    return this;
  }

  /**
   * A single identity requesting access for a Google Cloud resource. Follows the same format of Binding.members. Required
   * @return member
   */
  @javax.annotation.Nullable
  public String getMember() {
    return member;
  }

  public void setMember(@javax.annotation.Nullable String member) {
    this.member = member;
  }


  public GoogleIamV1BindingDelta role(@javax.annotation.Nullable String role) {
    this.role = role;
    return this;
  }

  /**
   * Role that is assigned to &#x60;members&#x60;. For example, &#x60;roles/viewer&#x60;, &#x60;roles/editor&#x60;, or &#x60;roles/owner&#x60;. Required
   * @return role
   */
  @javax.annotation.Nullable
  public String getRole() {
    return role;
  }

  public void setRole(@javax.annotation.Nullable String role) {
    this.role = role;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleIamV1BindingDelta googleIamV1BindingDelta = (GoogleIamV1BindingDelta) o;
    return Objects.equals(this.action, googleIamV1BindingDelta.action) &&
        Objects.equals(this.condition, googleIamV1BindingDelta.condition) &&
        Objects.equals(this.member, googleIamV1BindingDelta.member) &&
        Objects.equals(this.role, googleIamV1BindingDelta.role);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, condition, member, role);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleIamV1BindingDelta {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    member: ").append(toIndentedString(member)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("action", "condition", "member", "role"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleIamV1BindingDelta
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleIamV1BindingDelta.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleIamV1BindingDelta is not found in the empty JSON string", GoogleIamV1BindingDelta.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleIamV1BindingDelta.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleIamV1BindingDelta` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      // validate the optional field `action`
      if (jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) {
        ActionEnum.validateJsonElement(jsonObj.get("action"));
      }
      // validate the optional field `condition`
      if (jsonObj.get("condition") != null && !jsonObj.get("condition").isJsonNull()) {
        GoogleTypeExpr.validateJsonElement(jsonObj.get("condition"));
      }
      if ((jsonObj.get("member") != null && !jsonObj.get("member").isJsonNull()) && !jsonObj.get("member").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `member` to be a primitive type in the JSON string but got `%s`", jsonObj.get("member").toString()));
      }
      if ((jsonObj.get("role") != null && !jsonObj.get("role").isJsonNull()) && !jsonObj.get("role").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleIamV1BindingDelta.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleIamV1BindingDelta' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleIamV1BindingDelta> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleIamV1BindingDelta.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleIamV1BindingDelta>() {
           @Override
           public void write(JsonWriter out, GoogleIamV1BindingDelta value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleIamV1BindingDelta read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleIamV1BindingDelta given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleIamV1BindingDelta
   * @throws IOException if the JSON string is invalid with respect to GoogleIamV1BindingDelta
   */
  public static GoogleIamV1BindingDelta fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleIamV1BindingDelta.class);
  }

  /**
   * Convert an instance of GoogleIamV1BindingDelta to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

