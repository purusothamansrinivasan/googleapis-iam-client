/*
 * Identity and Access Management (IAM) API
 * Manages identity and access control for Google Cloud Platform resources, including the creation of service accounts, which you can use to authenticate to Google and make API calls. 
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.GoogleIamV2ListPoliciesResponse;
import org.openapitools.client.model.GoogleIamV2Policy;
import org.openapitools.client.model.GoogleLongrunningOperation;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PoliciesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public PoliciesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PoliciesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for iamPoliciesCreatePolicy
     * @param parent Required. The resource that the policy is attached to, along with the kind of policy to create. Format: &#x60;policies/{attachment_point}/denypolicies&#x60; The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param policyId The ID to use for this policy, which will become the final component of the policy&#39;s resource name. The ID must contain 3 to 63 characters. It can contain lowercase letters and numbers, as well as dashes (&#x60;-&#x60;) and periods (&#x60;.&#x60;). The first character must be a lowercase letter. (optional)
     * @param googleIamV2Policy  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call iamPoliciesCreatePolicyCall(@javax.annotation.Nonnull String parent, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable String policyId, @javax.annotation.Nullable GoogleIamV2Policy googleIamV2Policy, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = googleIamV2Policy;

        // create path and map variables
        String localVarPath = "/v2/{parent}"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (policyId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("policyId", policyId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call iamPoliciesCreatePolicyValidateBeforeCall(@javax.annotation.Nonnull String parent, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable String policyId, @javax.annotation.Nullable GoogleIamV2Policy googleIamV2Policy, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling iamPoliciesCreatePolicy(Async)");
        }

        return iamPoliciesCreatePolicyCall(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, policyId, googleIamV2Policy, _callback);

    }

    /**
     * 
     * Creates a policy.
     * @param parent Required. The resource that the policy is attached to, along with the kind of policy to create. Format: &#x60;policies/{attachment_point}/denypolicies&#x60; The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param policyId The ID to use for this policy, which will become the final component of the policy&#39;s resource name. The ID must contain 3 to 63 characters. It can contain lowercase letters and numbers, as well as dashes (&#x60;-&#x60;) and periods (&#x60;.&#x60;). The first character must be a lowercase letter. (optional)
     * @param googleIamV2Policy  (optional)
     * @return GoogleLongrunningOperation
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleLongrunningOperation iamPoliciesCreatePolicy(@javax.annotation.Nonnull String parent, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable String policyId, @javax.annotation.Nullable GoogleIamV2Policy googleIamV2Policy) throws ApiException {
        ApiResponse<GoogleLongrunningOperation> localVarResp = iamPoliciesCreatePolicyWithHttpInfo(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, policyId, googleIamV2Policy);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates a policy.
     * @param parent Required. The resource that the policy is attached to, along with the kind of policy to create. Format: &#x60;policies/{attachment_point}/denypolicies&#x60; The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param policyId The ID to use for this policy, which will become the final component of the policy&#39;s resource name. The ID must contain 3 to 63 characters. It can contain lowercase letters and numbers, as well as dashes (&#x60;-&#x60;) and periods (&#x60;.&#x60;). The first character must be a lowercase letter. (optional)
     * @param googleIamV2Policy  (optional)
     * @return ApiResponse&lt;GoogleLongrunningOperation&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleLongrunningOperation> iamPoliciesCreatePolicyWithHttpInfo(@javax.annotation.Nonnull String parent, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable String policyId, @javax.annotation.Nullable GoogleIamV2Policy googleIamV2Policy) throws ApiException {
        okhttp3.Call localVarCall = iamPoliciesCreatePolicyValidateBeforeCall(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, policyId, googleIamV2Policy, null);
        Type localVarReturnType = new TypeToken<GoogleLongrunningOperation>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates a policy.
     * @param parent Required. The resource that the policy is attached to, along with the kind of policy to create. Format: &#x60;policies/{attachment_point}/denypolicies&#x60; The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param policyId The ID to use for this policy, which will become the final component of the policy&#39;s resource name. The ID must contain 3 to 63 characters. It can contain lowercase letters and numbers, as well as dashes (&#x60;-&#x60;) and periods (&#x60;.&#x60;). The first character must be a lowercase letter. (optional)
     * @param googleIamV2Policy  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call iamPoliciesCreatePolicyAsync(@javax.annotation.Nonnull String parent, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable String policyId, @javax.annotation.Nullable GoogleIamV2Policy googleIamV2Policy, final ApiCallback<GoogleLongrunningOperation> _callback) throws ApiException {

        okhttp3.Call localVarCall = iamPoliciesCreatePolicyValidateBeforeCall(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, policyId, googleIamV2Policy, _callback);
        Type localVarReturnType = new TypeToken<GoogleLongrunningOperation>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for iamPoliciesDelete
     * @param name Required. The resource name of the policy to delete. Format: &#x60;policies/{attachment_point}/denypolicies/{policy_id}&#x60; Use the URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-policy&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param etag Optional. The expected &#x60;etag&#x60; of the policy to delete. If the value does not match the value that is stored in IAM, the request fails with a &#x60;409&#x60; error code and &#x60;ABORTED&#x60; status. If you omit this field, the policy is deleted regardless of its current &#x60;etag&#x60;. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call iamPoliciesDeleteCall(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable String etag, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/{name}"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (etag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("etag", etag));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call iamPoliciesDeleteValidateBeforeCall(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable String etag, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling iamPoliciesDelete(Async)");
        }

        return iamPoliciesDeleteCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, etag, _callback);

    }

    /**
     * 
     * Deletes a policy. This action is permanent.
     * @param name Required. The resource name of the policy to delete. Format: &#x60;policies/{attachment_point}/denypolicies/{policy_id}&#x60; Use the URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-policy&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param etag Optional. The expected &#x60;etag&#x60; of the policy to delete. If the value does not match the value that is stored in IAM, the request fails with a &#x60;409&#x60; error code and &#x60;ABORTED&#x60; status. If you omit this field, the policy is deleted regardless of its current &#x60;etag&#x60;. (optional)
     * @return GoogleLongrunningOperation
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleLongrunningOperation iamPoliciesDelete(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable String etag) throws ApiException {
        ApiResponse<GoogleLongrunningOperation> localVarResp = iamPoliciesDeleteWithHttpInfo(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, etag);
        return localVarResp.getData();
    }

    /**
     * 
     * Deletes a policy. This action is permanent.
     * @param name Required. The resource name of the policy to delete. Format: &#x60;policies/{attachment_point}/denypolicies/{policy_id}&#x60; Use the URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-policy&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param etag Optional. The expected &#x60;etag&#x60; of the policy to delete. If the value does not match the value that is stored in IAM, the request fails with a &#x60;409&#x60; error code and &#x60;ABORTED&#x60; status. If you omit this field, the policy is deleted regardless of its current &#x60;etag&#x60;. (optional)
     * @return ApiResponse&lt;GoogleLongrunningOperation&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleLongrunningOperation> iamPoliciesDeleteWithHttpInfo(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable String etag) throws ApiException {
        okhttp3.Call localVarCall = iamPoliciesDeleteValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, etag, null);
        Type localVarReturnType = new TypeToken<GoogleLongrunningOperation>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Deletes a policy. This action is permanent.
     * @param name Required. The resource name of the policy to delete. Format: &#x60;policies/{attachment_point}/denypolicies/{policy_id}&#x60; Use the URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-policy&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param etag Optional. The expected &#x60;etag&#x60; of the policy to delete. If the value does not match the value that is stored in IAM, the request fails with a &#x60;409&#x60; error code and &#x60;ABORTED&#x60; status. If you omit this field, the policy is deleted regardless of its current &#x60;etag&#x60;. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call iamPoliciesDeleteAsync(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable String etag, final ApiCallback<GoogleLongrunningOperation> _callback) throws ApiException {

        okhttp3.Call localVarCall = iamPoliciesDeleteValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, etag, _callback);
        Type localVarReturnType = new TypeToken<GoogleLongrunningOperation>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for iamPoliciesListPolicies
     * @param parent Required. The resource that the policy is attached to, along with the kind of policy to list. Format: &#x60;policies/{attachment_point}/denypolicies&#x60; The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param pageSize The maximum number of policies to return. IAM ignores this value and uses the value 1000. (optional)
     * @param pageToken A page token received in a ListPoliciesResponse. Provide this token to retrieve the next page. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call iamPoliciesListPoliciesCall(@javax.annotation.Nonnull String parent, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/{parent}"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call iamPoliciesListPoliciesValidateBeforeCall(@javax.annotation.Nonnull String parent, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling iamPoliciesListPolicies(Async)");
        }

        return iamPoliciesListPoliciesCall(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, _callback);

    }

    /**
     * 
     * Retrieves the policies of the specified kind that are attached to a resource. The response lists only policy metadata. In particular, policy rules are omitted.
     * @param parent Required. The resource that the policy is attached to, along with the kind of policy to list. Format: &#x60;policies/{attachment_point}/denypolicies&#x60; The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param pageSize The maximum number of policies to return. IAM ignores this value and uses the value 1000. (optional)
     * @param pageToken A page token received in a ListPoliciesResponse. Provide this token to retrieve the next page. (optional)
     * @return GoogleIamV2ListPoliciesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleIamV2ListPoliciesResponse iamPoliciesListPolicies(@javax.annotation.Nonnull String parent, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable String pageToken) throws ApiException {
        ApiResponse<GoogleIamV2ListPoliciesResponse> localVarResp = iamPoliciesListPoliciesWithHttpInfo(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves the policies of the specified kind that are attached to a resource. The response lists only policy metadata. In particular, policy rules are omitted.
     * @param parent Required. The resource that the policy is attached to, along with the kind of policy to list. Format: &#x60;policies/{attachment_point}/denypolicies&#x60; The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param pageSize The maximum number of policies to return. IAM ignores this value and uses the value 1000. (optional)
     * @param pageToken A page token received in a ListPoliciesResponse. Provide this token to retrieve the next page. (optional)
     * @return ApiResponse&lt;GoogleIamV2ListPoliciesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleIamV2ListPoliciesResponse> iamPoliciesListPoliciesWithHttpInfo(@javax.annotation.Nonnull String parent, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable String pageToken) throws ApiException {
        okhttp3.Call localVarCall = iamPoliciesListPoliciesValidateBeforeCall(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, null);
        Type localVarReturnType = new TypeToken<GoogleIamV2ListPoliciesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves the policies of the specified kind that are attached to a resource. The response lists only policy metadata. In particular, policy rules are omitted.
     * @param parent Required. The resource that the policy is attached to, along with the kind of policy to list. Format: &#x60;policies/{attachment_point}/denypolicies&#x60; The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, you can use the alphanumeric or the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param pageSize The maximum number of policies to return. IAM ignores this value and uses the value 1000. (optional)
     * @param pageToken A page token received in a ListPoliciesResponse. Provide this token to retrieve the next page. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call iamPoliciesListPoliciesAsync(@javax.annotation.Nonnull String parent, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable String pageToken, final ApiCallback<GoogleIamV2ListPoliciesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = iamPoliciesListPoliciesValidateBeforeCall(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, _callback);
        Type localVarReturnType = new TypeToken<GoogleIamV2ListPoliciesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for iamPoliciesOperationsGet
     * @param name The name of the operation resource. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call iamPoliciesOperationsGetCall(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/{name}"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call iamPoliciesOperationsGetValidateBeforeCall(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling iamPoliciesOperationsGet(Async)");
        }

        return iamPoliciesOperationsGetCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, _callback);

    }

    /**
     * 
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     * @param name The name of the operation resource. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @return GoogleLongrunningOperation
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleLongrunningOperation iamPoliciesOperationsGet(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType) throws ApiException {
        ApiResponse<GoogleLongrunningOperation> localVarResp = iamPoliciesOperationsGetWithHttpInfo(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     * @param name The name of the operation resource. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @return ApiResponse&lt;GoogleLongrunningOperation&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleLongrunningOperation> iamPoliciesOperationsGetWithHttpInfo(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType) throws ApiException {
        okhttp3.Call localVarCall = iamPoliciesOperationsGetValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, null);
        Type localVarReturnType = new TypeToken<GoogleLongrunningOperation>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     * @param name The name of the operation resource. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call iamPoliciesOperationsGetAsync(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, final ApiCallback<GoogleLongrunningOperation> _callback) throws ApiException {

        okhttp3.Call localVarCall = iamPoliciesOperationsGetValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, _callback);
        Type localVarReturnType = new TypeToken<GoogleLongrunningOperation>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for iamPoliciesUpdate
     * @param name Immutable. The resource name of the &#x60;Policy&#x60;, which must be unique. Format: &#x60;policies/{attachment_point}/denypolicies/{policy_id}&#x60; The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-deny-policy&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, requests can use the alphanumeric or the numeric ID. Responses always contain the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param googleIamV2Policy  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call iamPoliciesUpdateCall(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable GoogleIamV2Policy googleIamV2Policy, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = googleIamV2Policy;

        // create path and map variables
        String localVarPath = "/v2/{name}"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call iamPoliciesUpdateValidateBeforeCall(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable GoogleIamV2Policy googleIamV2Policy, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling iamPoliciesUpdate(Async)");
        }

        return iamPoliciesUpdateCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleIamV2Policy, _callback);

    }

    /**
     * 
     * Updates the specified policy. You can update only the rules and the display name for the policy. To update a policy, you should use a read-modify-write loop: 1. Use GetPolicy to read the current version of the policy. 2. Modify the policy as needed. 3. Use &#x60;UpdatePolicy&#x60; to write the updated policy. This pattern helps prevent conflicts between concurrent updates.
     * @param name Immutable. The resource name of the &#x60;Policy&#x60;, which must be unique. Format: &#x60;policies/{attachment_point}/denypolicies/{policy_id}&#x60; The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-deny-policy&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, requests can use the alphanumeric or the numeric ID. Responses always contain the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param googleIamV2Policy  (optional)
     * @return GoogleLongrunningOperation
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleLongrunningOperation iamPoliciesUpdate(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable GoogleIamV2Policy googleIamV2Policy) throws ApiException {
        ApiResponse<GoogleLongrunningOperation> localVarResp = iamPoliciesUpdateWithHttpInfo(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleIamV2Policy);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates the specified policy. You can update only the rules and the display name for the policy. To update a policy, you should use a read-modify-write loop: 1. Use GetPolicy to read the current version of the policy. 2. Modify the policy as needed. 3. Use &#x60;UpdatePolicy&#x60; to write the updated policy. This pattern helps prevent conflicts between concurrent updates.
     * @param name Immutable. The resource name of the &#x60;Policy&#x60;, which must be unique. Format: &#x60;policies/{attachment_point}/denypolicies/{policy_id}&#x60; The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-deny-policy&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, requests can use the alphanumeric or the numeric ID. Responses always contain the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param googleIamV2Policy  (optional)
     * @return ApiResponse&lt;GoogleLongrunningOperation&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleLongrunningOperation> iamPoliciesUpdateWithHttpInfo(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable GoogleIamV2Policy googleIamV2Policy) throws ApiException {
        okhttp3.Call localVarCall = iamPoliciesUpdateValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleIamV2Policy, null);
        Type localVarReturnType = new TypeToken<GoogleLongrunningOperation>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates the specified policy. You can update only the rules and the display name for the policy. To update a policy, you should use a read-modify-write loop: 1. Use GetPolicy to read the current version of the policy. 2. Modify the policy as needed. 3. Use &#x60;UpdatePolicy&#x60; to write the updated policy. This pattern helps prevent conflicts between concurrent updates.
     * @param name Immutable. The resource name of the &#x60;Policy&#x60;, which must be unique. Format: &#x60;policies/{attachment_point}/denypolicies/{policy_id}&#x60; The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, &#x60;/&#x60;, must be written as &#x60;%2F&#x60;. For example, &#x60;policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-deny-policy&#x60;. For organizations and folders, use the numeric ID in the full resource name. For projects, requests can use the alphanumeric or the numeric ID. Responses always contain the numeric ID. (required)
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param googleIamV2Policy  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call iamPoliciesUpdateAsync(@javax.annotation.Nonnull String name, @javax.annotation.Nullable String $xgafv, @javax.annotation.Nullable String accessToken, @javax.annotation.Nullable String alt, @javax.annotation.Nullable String paramCallback, @javax.annotation.Nullable String fields, @javax.annotation.Nullable String key, @javax.annotation.Nullable String oauthToken, @javax.annotation.Nullable Boolean prettyPrint, @javax.annotation.Nullable String quotaUser, @javax.annotation.Nullable String uploadProtocol, @javax.annotation.Nullable String uploadType, @javax.annotation.Nullable GoogleIamV2Policy googleIamV2Policy, final ApiCallback<GoogleLongrunningOperation> _callback) throws ApiException {

        okhttp3.Call localVarCall = iamPoliciesUpdateValidateBeforeCall(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleIamV2Policy, _callback);
        Type localVarReturnType = new TypeToken<GoogleLongrunningOperation>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
